# .github/workflows/check-chrome-version.yml

name: Check for Latest Chrome Version

on:
  workflow_dispatch:

  schedule:
    - cron: '0 8 * * *'

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository to access files
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Fetch the latest version number
      - name: Get Latest Stable Chrome Version
        id: get_version
        run: |
          # Use curl to download the official JSON file from Google's Chrome for Testing endpoints.
          # Use jq to parse the JSON and extract the version number for the "Stable" channel.
          # The '-r' flag in jq removes the quotes from the output string.
          LATEST_VERSION=$(curl -s 'https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions.json' | jq -r '.channels.Stable.version')
          
          # Print the version to the workflow log
          echo "Latest Stable Chrome Version: $LATEST_VERSION"
          
          # Set the version as an output parameter for other steps to use
          echo "version=$LATEST_VERSION" >> "$GITHUB_OUTPUT"

      # Step 3: Check current version and update if needed
      - name: Check and Update Chrome Version
        run: |
          LATEST_VERSION="${{ steps.get_version.outputs.version }}"
          
          # Read current version from file, default to empty if file doesn't exist
          if [ -f "current-chrome-version.txt" ]; then
            CURRENT_VERSION=$(cat current-chrome-version.txt | tr -d '\n')
          else
            CURRENT_VERSION=""
          fi
          
          echo "Current version: $CURRENT_VERSION"
          echo "Latest version: $LATEST_VERSION"
          
          # Compare versions (simple string comparison should work for Chrome versions)
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "Version has changed! Updating file..."
            echo "$LATEST_VERSION" > current-chrome-version.txt
            echo "updated=true" >> "$GITHUB_OUTPUT"
          else
            echo "Version unchanged. No update needed."
            echo "updated=false" >> "$GITHUB_OUTPUT"
          fi
        id: update_version

      # Step 4: Commit changes if version was updated
      - name: Commit updated version
        if: steps.update_version.outputs.updated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add current-chrome-version.txt
          git commit -m "Update Chrome version to ${{ steps.get_version.outputs.version }}"
          git push
